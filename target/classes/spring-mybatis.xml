<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.0.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
    http://www.springframework.org/schema/jdbc
 	http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
 	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">

    <context:component-scan base-package="database"/>
    <context:property-placeholder location="classpath:db.properties"/>

    <!-- 数据库链接配置 -->
    <!--<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init"	destroy-method="close">-->
    <!--<property name="driverClassName" value="${db.driver.class}"/>-->
    <!--<property name="url" value="${db.url}"/>-->
    <!--<property name="username" value="${db.username}"/>-->
    <!--<property name="password" value="${db.password}"/>-->
    <!--<property name="filters" value="stat"/>-->
    <!--<property name="connectionProperties" value="druid.stat.mergeSql=true"/>-->
    <!--<property name="maxActive" value="${db.proxool.maxActive}"/>-->
    <!--<property name="initialSize" value="${db.proxool.initialSize}"/>-->
    <!--<property name="maxWait" value="${db.proxool.maxWait}"/>-->
    <!--<property name="minIdle" value="${db.proxool.minIdle}"/>-->
    <!--<property name="timeBetweenEvictionRunsMillis" value="${db.proxool.timeBetweenEvictionRunsMillis}"/>-->
    <!--<property name="minEvictableIdleTimeMillis" value="${db.proxool.minEvictableIdleTimeMillis}"/>-->
    <!--<property name="validationQuery" value="SELECT 1"/>-->
    <!--<property name="ValidationQueryTimeout" value="100000"/>-->
    <!--<property name="testWhileIdle" value="true"/>-->
    <!--<property name="testOnBorrow" value="false"/>-->
    <!--<property name="testOnReturn" value="false"/>-->

    <!--&lt;!&ndash; 连接泄漏监测 &ndash;&gt;-->
    <!--<property name="removeAbandoned" value="true"/>-->
    <!--&lt;!&ndash; 打开removeAbandoned功能 &ndash;&gt;-->
    <!--<property name="removeAbandonedTimeout" value="1800"/>-->
    <!--&lt;!&ndash; 1800秒，也就是30分钟 &ndash;&gt;-->
    <!--<property name="logAbandoned" value="true"/>-->
    <!--&lt;!&ndash; 关闭abanded连接时输出错误日志 &ndash;&gt;-->
    <!--</bean>-->

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName"><value>${db.driver.class}</value></property>
        <property name="url"><value>${db.url}</value></property>
        <property name="username"><value>${db.username}</value></property>
        <property name="password"><value>${db.password}</value></property>
    </bean>

    <!-- 配置事务管理器 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="plugins">
            <array>
            </array>
        </property>
        <property name="configLocation" value="classpath:mybatis-configuration.xml"></property>
        <property name="mapperLocations" value="classpath*:database/mapper/*.xml"></property>
    </bean>

    <context:annotation-config />
    <tx:annotation-driven />

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="database.dao" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>

</beans>